import os
import time
import selenium
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager as CM
from selenium.webdriver.chrome.service import Service
from getpass import getpass

# Constants for timeouts
ELEMENTS_TIMEOUT = 1500
FOLLOW_DATA_LOADING_TIMEOUT = 5000


def scrape():
    # Secure password input
    username = input('Enter Your Username: ')
    password = getpass('Enter Your Password: ')

    options = webdriver.ChromeOptions()
    options.add_argument('--no-sandbox')
    options.add_argument("--lang=en")
    options.add_argument("--log-level=3")
    options.add_experimental_option("detach", True)

    # Setting up mobile emulation
    mobile_emulation = {
        "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/535.19"}
    options.add_experimental_option("mobileEmulation", mobile_emulation)

    # Starting WebDriver with ChromeManager
    service = Service(CM().install())
    bot = webdriver.Chrome(service=service, options=options)
    bot.set_window_size(600, 1000)

    try:
        # Navigate to Instagram login page
        bot.get('https://www.instagram.com/')
        time.sleep(2)

        print("Logging in...")

        # Locate and input username
        user_element = WebDriverWait(bot, ELEMENTS_TIMEOUT).until(
            EC.presence_of_element_located((By.XPATH, '//*[@id="loginForm"]/div/div[1]/div/label/input')))
        user_element.send_keys(username)

        # Locate and input password
        pass_element = WebDriverWait(bot, ELEMENTS_TIMEOUT).until(
            EC.presence_of_element_located((By.XPATH, '//*[@id="loginForm"]/div/div[2]/div/label/input')))
        pass_element.send_keys(password)

        # Click login button
        login_button = WebDriverWait(bot, ELEMENTS_TIMEOUT).until(
            EC.presence_of_element_located((By.XPATH, '//*[@id="loginForm"]/div/div[3]/button')))
        time.sleep(0.4)
        login_button.click()

        time.sleep(5)

        user_target = input('Enter Your Target Username: ')
        bot.get(f'https://www.instagram.com/{user_target}/')
        time.sleep(5)

        target_followers = int(input('Enter how many followers you want to scrape (make sure the value is an integer): '))

        if target_followers > 0:
            # Navigate to followers list
            bot.get(f'https://www.instagram.com/{user_target}/followers/')
            time.sleep(3.5)

            # Prepare to scroll and scrape followers
            ActionChains(bot).key_down(Keys.SHIFT).send_keys(Keys.TAB).key_up(Keys.SHIFT).perform()
            ActionChains(bot).key_down(Keys.SHIFT).send_keys(Keys.TAB).key_up(Keys.SHIFT).perform()

        print('Scraping followers...')

        followers = set()
        not_loading_count = 0
        prev = 0
        while len(followers) < target_followers:
            ActionChains(bot).send_keys(Keys.END).perform()
            time.sleep(5)

            more_followers = bot.find_elements(By.XPATH, '//*/div[@role="button"]/a')
            followers.update(more_followers)

            if len(followers) == prev:
                not_loading_count += 1
            else:
                not_loading_count = 0

            if not_loading_count == FOLLOW_DATA_LOADING_TIMEOUT:
                break
            prev = len(followers)

        users_followers = set()
        for i in followers:
            if i.get_attribute('href'):
                follower = i.get_attribute('href').split("/")[3]
                users_followers.add(follower)

        print('Saving to file...')

        # Ensure directory exists
        if not os.path.exists('infos'):
            os.makedirs('infos')

        with open('infos/usernames.txt', 'w') as file:
            file.write('\n'.join(users_followers) + "\n")

        print('[DONE] - Your followers are saved in usernames.txt file')

    except Exception as e:
        print(f"An error occurred: {e}")

    finally:
        print('Exiting...')
        bot.quit()


if __name__ == '__main__':
    scrape()
